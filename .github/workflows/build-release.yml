name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v0.1.0
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.arch }} executable
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - arch: x86
            python-arch: x86
          - arch: x86_64
            python-arch: x64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-arch }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: ${{ matrix.python-arch }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Build executable with PyInstaller
        run: |
          pyinstaller ntpi_main.spec
      
      - name: Rename executable
        run: |
          Move-Item -Path "dist\ntpi_dumper.exe" -Destination "dist\ntpi_dumper_${{ matrix.arch }}.exe"
      
      - name: Calculate SHA256
        id: sha256
        run: |
          $hash = (Get-FileHash -Path "dist\ntpi_dumper_${{ matrix.arch }}.exe" -Algorithm SHA256).Hash
          echo "sha256=$hash" >> $env:GITHUB_OUTPUT
          echo "SHA256 for ${{ matrix.arch }}: $hash"
          # Create checksum file
          "$hash  ntpi_dumper_${{ matrix.arch }}.exe" | Out-File -FilePath "dist\ntpi_dumper_${{ matrix.arch }}.exe.sha256" -Encoding ascii
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ntpi_dumper_${{ matrix.arch }}
          path: |
            dist/ntpi_dumper_${{ matrix.arch }}.exe
            dist/ntpi_dumper_${{ matrix.arch }}.exe.sha256
          retention-days: 5

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Display structure of downloaded files
        run: ls -R artifacts
      
      - name: Prepare release files
        run: |
          mkdir -p release
          find artifacts -name "*.exe" -exec cp {} release/ \;
          find artifacts -name "*.sha256" -exec cp {} release/ \;
          ls -lh release/
      
      - name: Read version from version.py
        id: get_version
        run: |
          VERSION=$(grep "__version__" version.py | cut -d "'" -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
      
      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## NTPI Dumper ${{ steps.get_version.outputs.version }}
          
          ### Downloads
          
          | Platform | Architecture | Download | SHA256 |
          |----------|-------------|----------|--------|
          | Windows | x86 (32-bit) | [ntpi_dumper_x86.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/ntpi_dumper_x86.exe) | See checksum file |
          | Windows | x86_64 (64-bit) | [ntpi_dumper_x86_64.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/ntpi_dumper_x86_64.exe) | See checksum file |
          
          ### SHA256 Checksums
          
          ```
          EOF
          cat release/ntpi_dumper_x86.exe.sha256 >> release_notes.md
          cat release/ntpi_dumper_x86_64.exe.sha256 >> release_notes.md
          echo '```' >> release_notes.md
          cat >> release_notes.md << 'EOF'
          
          ### Features
          
          - âœ… NTPI firmware file parsing and extraction
          
          ### Usage
          
          ```bash
          # Show version
          ntpi_dumper_x86_64.exe --version
          
          # Show help
          ntpi_dumper_x86_64.exe --help
          
          # Extract firmware
          ntpi_dumper_x86_64.exe firmware.ntpi
          
          # Custom output directory and parallel processes
          ntpi_dumper_x86_64.exe -f firmware.ntpi -o output_dir -p 4
          ```
          
          ### Requirements
          
          - Windows 7 or later
          - No additional dependencies required (standalone executable)
          
          ### Verification
          
          To verify the downloaded file:
          
          **Windows PowerShell:**
          ```powershell
          (Get-FileHash -Algorithm SHA256 ntpi_dumper_x86_64.exe).Hash
          ```
          
          Compare the output with the SHA256 checksum provided above.
          EOF
          cat release_notes.md
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          files: |
            release/ntpi_dumper_x86.exe
            release/ntpi_dumper_x86_64.exe
            release/ntpi_dumper_x86.exe.sha256
            release/ntpi_dumper_x86_64.exe.sha256
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
